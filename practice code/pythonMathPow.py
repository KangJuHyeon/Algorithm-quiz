# 파이썬에서 제곱근을 구하는 방법을 정리하고, 연습해보는 시간을 가져보자

# 1. 파이썬 pow 함수
# 2. 파이썬 math의 sqrt 함수
# 3. 정수 제곱근 판별 및 계산 방법

# 파이썬 제곱 함수 pow란?
# 파이썬 내장 함수에 정의된 pow()가 있고,
# math 라이브러리에 정의된 math.pow() 함수가 있습니다.
# math.pow 함수란?
# 사용하기 전에 import math를 통해서 임포트해야합니다.
# math.pow(x,y) 
# 위에 함수는 x의 y 거듭제곱 (x의 y승)을 반환합니다.

# 추가 메모
# 1. 이 함수의 반환형은 언제나 float 타입입니다. (정수 타입 계산을 원한다면 내장 함수 pow 혹은 ** 을 사용하면 됩니다.)
# 2. 주의할 점은 x가 음수이면서 y가 실수를 집어넣은 경우에는 Error 가 나옵니다. ( math.pow (-2, 3.2) 이런 식은 에러)
# 3. math.pow(1.0, y)는 항상 1.0입니다. 당연한 거겠죠 이건? 1의 n 제곱은 무조건 1 일 것입니다.
# 4. math.pow(x, 0,0)은 항상 1.0입니다. 이것도 당연합니다. n의 0 제곱은 무조건 1입니다.
import math
print(math.pow(12, 0.5))

# 2. 파이썬 제곱근 함수 sqrt란?
# math 라이브러리를 임포트해야만 사용할 수 있습니다.
# math.sqrt(n)
# 위에 함수는 x의 제곱근을 반환합니다. (x에 루트를 씌운 값을 반환) 

# 추가 정보
# 1. 이 함수의 반환형 또한 float 타입입니다.
# 2.math.sqrt(음수)가 들어오게 된다면 ERROR 가 발생합니다. (math.sqrt(-2) 이런 식은 에러 발생)

import math
print(math.sqrt(4))

# 3. 정수 제곱근 판별 및 계산 방법
# 전체적으로 이야기, 정리해보려고 합니다.

# 기본적인 방식
# 파이썬에서 기본적으로 루트를 하는 방식은 당연하게도 제곱(**)을 이용하는 방식입니다.
print("2의 루트 :", 2**(1/2))
# 실행 결과
# 2의 루트 : 1.4142135623730951

# 제곱근을 연산하고 싶은 값을 입력하고** (제곱을 수행한 후) (1/2)의 값을 곱한다. 
# 정석적인 제곱근을 구하는 방식이니 누구나 쉽게 이해를 할 것이다. 

# Math 라이브러리 방식
# 파이썬에서는 수학 라이브러리인 Math를 이용해서 제곱근을 구할 수도 있습니다.
import math
print("2의 루트 :", math.sqrt(2))
# 실행 결과
# 2의 루트 : 1.4142135623730951

# 일반적으로 파이썬 개발자들은 math 라이브러리를 다루는 것에 능숙하며, 
# 유지보수성이나 가독성 측면에서 sqrt 함수를 사용하는 것이 기본적인 방법보다 유리하기에 아래의 방법을 더 많이 사용한다.