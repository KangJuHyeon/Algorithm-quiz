# 문제 읽기
# 1234 나라가 있다. 124나라에는 10진법이 아닌 다음과 같은 자신들만의 규칙으로 수를 표현한다.
# 124나라에는 자연수만 존재한다.
# 124나라에는 모든 수를 표현할 때 1,2,4만 사용한다.
# 자연수 n이 매개변수로 주어질 때 n을 124 나라에서 사용하는 숫자로 바꾼 값을 리턴하라.

# 문제 접근
# 규칙을 잘보면 1,2,4,11,12,14,21,22,24 이런식이다.
# 만약 n이 answer와 다르다면 or 없다면 [1,2,4]를 차례대로 입력 값에 할당
# 그 이후 11,12,14,21 등은 join으로 붙여줘야될 듯?
# 방법이 잘못된 것 같다. 다시

# 문제접근(2)
# 모의고사에서 풀었던 방식처럼 [1,2,4]를 나눠서 출력한다? [0,1,2] [n % 3]
# 몫과 나머지를 이용하면 풀 수 있었고, 공책에 규칙에 대한 이해를 하느라 오래걸렸다.
# 나는 오히려 3 => 4 이렇게 나오는 것을 중점으로 두었던 것 같고, 리스트의 개념이 조금 부족했던 것 같다.
# 디버깅을 해보면서 로직을 짰고, 몫과 나머지 값을 이해하는데도 시간이 많이걸렸다.
# 요약 :3으로 나눠보고, 몫과 나머지 값을 보면 규칙이 보인다.

# 수도코드(1)
n = 1 # 입력 값
answer = '' # 입력 값을 124나라 숫자로 변환한 숫자
result = ['1','2','4']
for i in range(len(result)): # 1,2,4 이어 붙이면...
    if n != 0:
        answer += result[i] # 1 || 12 || 124
        print(answer)


# 문제풀이(1)
def solution(n):
    answer = '' # 입력 값을 124나라 숫자로 변환한 값
    result = ['1','2','4']
    while n > 0:
        n -= 1 # 나머지가 0일 때, 몫을 1빼줘야한다. 그래야 나머지가 0이되고, while문에 조건이 안맞아서 바로 리턴한다.
        # print(answer)
        answer = result[n % 3] + answer
        print(result[n % 3])
        print(n)
        n //= 3 # 입력된 수를 몫으로 설정 => while문을 빠져나오기 위함
        print(n)
    return answer
print(solution(8))
    