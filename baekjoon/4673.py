# 문제
# 셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 
# 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 
# 예를 들어, d(75) = 75+7+5 = 87이다.
# 양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 
# 예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 
# 이런식으로 다음과 같은 수열을 만들 수 있다. 33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...
# n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다. 
# 생성자가 없는 숫자를 셀프 넘버라고 한다. 
# 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97
# 10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.

# 입력
# 10,000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 증가하는 순서로 출력한다.

# 문제 접근 및 이해
# 셀프 넘버란 쉽게말해서 누군가를 더해서 나올 수 없는 수를 뜻한다.
# 예를들어 123이란 수가 있다면 123 + 1 + 2 + 3으로 129가 생성되는데
# 이런식으로 생성될 수 없는 수가 바로 셀프 넘버이다.
# 더 쉽게 예를 들어보자면 10보다 작은 셀프 넘버는 1, 3, 5, 7, 9가 있다.
# 1부터 시작한다고 치면
# 1 + 1 = 2
# 2 + 2 = 4
# 3 + 3 = 6
# 이런식으로 자기 자신의 수와 각 자리수의 합으로 만들어지는 어떤 임의의 수는 셀프 넘버가 될 수 없다.
# 1부터 10000까지의 수가 담겨있는 리스트에서 셀프 넘버가 될 수 없는 수들을 뺄 것이다.
# self_list라는 리스트에 1부터 10000까지의 수를 담아둔다.
# 10000보다 작거나 같은 셀프 넘버를 출력해야 되기 때문에 10000이 들어갔을때는 생성되는 수가 10001이 된다.
# 그러므로 10000보다 작거나 같은 셀프 넘버들은 모두 4자리수 이하라고 가정하고 문제를 풀면된다.
# 10000보다 작거나 같은 셀프 넘버들은 모두 4자리수 이하라고 가정하고 문제를 푼다.
# 자기 자신의 수와 각 자리수를 더해야 하기 때문에 str형과 int형을 잘 바꿔가며 사용한다.
# 이렇게 생성되는 셀프 넘버가 될 수 없는 수들은 num_list에 담아둔다.
# num_list에 있는 수들은 셀프 넘버가 될 수 없기 때문에 self_list에서 num_list에 있는 수들을 지워준다.
# 마지막으로 self_list에 있는 수들을 한줄씩 출력해주면 된다.

#함수 d 구현하기
def d(n):
  n = n+sum(map(int,str(n)))
  
  return n

#생성자가 있는지 확인할 리스트 초기화하기
a=[0]*10001

#생성자 찾기
for i in range(1,10001):
  a[i] = d(i)


for i in range(1,10001):
  #셀프넘버라면 출력하기
  if i not in a:
    print(i)

def self_number():
    self_list = []
    num_list = []
    for i in range(1, 10001): # 1부터 10000까지의 수가 담겨있는 리스트에서 셀프 넘거가 될 수 없는 수들을 뺄 것이다.
        self_list.append(i) # 1부터 10000까지의 수를 담아둔다.
        for j in range(len(str(i))): 
            if len(str(i)) == 4:
                num = i + int(str(i)[0]) + int(str(i)[1]) + int(str(i)[2]) + int(str(i)[3])
            elif len(str(i)) == 3:
                num = i + int(str(i)[0]) + int(str(i)[1]) + int(str(i)[2])
            elif len(str(i)) == 2:
                num = i + int(str(i)[0]) + int(str(i)[1])
            elif len(str(i)) == 1:
                num = i + i

            num_list.append(num)
    
    for k in range(len(num_list)):
        if num_list[k] in self_list:
            self_list.remove(num_list[k])
    
    for x in self_list:
        print(x)
    
selif_number()
