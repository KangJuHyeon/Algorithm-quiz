# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.
# 26부터 시작한다. 2+6 = 8이다. 
# 새로운 수는 68이다. 6+8 = 14이다. 
# 새로운 수는 84이다. 8+4 = 12이다. 
# 새로운 수는 42이다. 4+2 = 6이다. 
# 새로운 수는 26이다.
# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 
# 따라서 26의 사이클의 길이는 4이다.
# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

# 문제풀이(1) 정수형으로 바로 풀기
n = int(input()) # 정수가 입력되고, 이걸 0,1번째 인덱스를 더해서 카운팅을 해야된다.
num = n
cnt = 0

while 1 or True:
    a = num // 10 # 6
    b = num % 10  # 8
    c = (a + b) % 10 # 6 + 8 = 14, c = 4
    num = (b * 10) + c # 80 + 4 = 84

    cnt += 1
    if num == n:
        break

print(cnt)

# 문제풀이(2) 더하기 사이클(str)
n = input()
if len(n) <= 1: # 입력한 문자열 길이가 1과 같거나 작다면
    n = "0" + n # 입력한 값의 문자열 0을 담는다. n = "01"
num = n
cnt = 0

while 1:
    if len(num) <= 1: 
        num = "0" + num
    a = str(int(num[0]) + int(num[1])) # "01" 0 + 1 = a = 1
    num = num[-1] + a[-1] # "1" + "1" = "11"
    cnt += 1
    if num == n: # 
        print(cnt)
        break

    